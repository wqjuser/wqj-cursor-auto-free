name: Build Executables

on:
  push:
    tags:
      - 'v*'  # 添加标签触发条件，匹配 v1.0.0 这样的标签

jobs:
  # CLI版本构建任务
  build-windows-cli:
    runs-on: windows-latest
    
    steps:
    - uses: actions/checkout@v2
    
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller
        pip install -r requirements.txt
        
    - name: Build EXE
      run: |
        python build.py
        
    - name: Upload Windows artifact
      uses: actions/upload-artifact@v4
      with:
        name: windows-cli
        path: dist/windows/CursorPro-Windows.exe

  # 新增 - Windows GUI版本
  build-windows-gui:
    runs-on: windows-latest
    
    steps:
    - uses: actions/checkout@v2
    
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller
        pip install -r requirements.txt
        pip install PyQt6
        
    - name: Build GUI EXE
      run: |
        python build.py --gui
        
    - name: Upload Windows GUI artifact
      uses: actions/upload-artifact@v4
      with:
        name: windows-gui
        path: dist/windows/CursorProGUI-Windows.exe

  build-macos-arm64-cli:
    runs-on: macos-14  # 使用 macos-14 runner，它是 ARM 架构
    
    steps:
    - uses: actions/checkout@v2
    
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
        architecture: 'arm64'  # 明确指定 arm64 架构
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller
        pip install -r requirements.txt
        
    - name: Build MacOS ARM executable
      env:
        ARCHFLAGS: "-arch arm64"
        MACOS_ARCH: "arm64"
        TARGET_ARCH: "arm64"
      run: |
        python build.py
        
    - name: Upload MacOS ARM artifact
      uses: actions/upload-artifact@v4
      with:
        name: macos-arm64-cli
        path: dist/mac/CursorPro-MacOS-ARM64
        
  # 新增 - macOS ARM64 GUI版本
  build-macos-arm64-gui:
    runs-on: macos-14  # 使用 macos-14 runner，它是 ARM 架构
    
    steps:
    - uses: actions/checkout@v2
    
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
        architecture: 'arm64'  # 明确指定 arm64 架构
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller
        pip install -r requirements.txt
        pip install PyQt6
        brew install create-dmg
        
    - name: Build MacOS ARM GUI executable
      env:
        ARCHFLAGS: "-arch arm64"
        MACOS_ARCH: "arm64"
        TARGET_ARCH: "arm64"
      run: |
        python build.py --gui
        
    - name: Create DMG
      run: |
        create-dmg \
          --volname "CursorPro" \
          --window-pos 200 120 \
          --window-size 800 400 \
          --icon-size 100 \
          --icon "CursorProGUI-MacOS-ARM64.app" 200 190 \
          --hide-extension "CursorProGUI-MacOS-ARM64.app" \
          --app-drop-link 600 185 \
          "dist/mac/CursorProGUI-MacOS-ARM64.dmg" \
          "dist/mac/CursorProGUI-MacOS-ARM64.app"
        
    - name: Upload MacOS ARM GUI artifact
      uses: actions/upload-artifact@v4
      with:
        name: macos-arm64-gui
        path: dist/mac/CursorProGUI-MacOS-ARM64.dmg

  build-macos-intel-cli:
    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
        architecture: 'x64'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller
        pip install --no-deps psutil
        pip install -r requirements.txt

    - name: Build MacOS Intel executable
      env:
        ARCHFLAGS: "-arch x86_64"
        MACOS_ARCH: "x86_64"
        TARGET_ARCH: "x86_64"
      run: |
        python build.py
        
    - name: Upload MacOS Intel artifact
      uses: actions/upload-artifact@v4
      with:
        name: macos-intel-cli
        path: dist/mac/CursorPro-MacOS-Intel

  # 新增 - macOS Intel GUI版本
  build-macos-intel-gui:
    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
        architecture: 'x64'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller
        pip install --no-deps psutil
        pip install -r requirements.txt
        pip install PyQt6
        brew install create-dmg

    - name: Build MacOS Intel GUI executable
      env:
        ARCHFLAGS: "-arch x86_64"
        MACOS_ARCH: "x86_64"
        TARGET_ARCH: "x86_64"
      run: |
        python build.py --gui
        
    - name: Create DMG
      run: |
        create-dmg \
          --volname "CursorPro" \
          --window-pos 200 120 \
          --window-size 800 400 \
          --icon-size 100 \
          --icon "CursorProGUI-MacOS-Intel.app" 200 190 \
          --hide-extension "CursorProGUI-MacOS-Intel.app" \
          --app-drop-link 600 185 \
          "dist/mac/CursorProGUI-MacOS-Intel.dmg" \
          "dist/mac/CursorProGUI-MacOS-Intel.app"
        
    - name: Upload MacOS Intel GUI artifact
      uses: actions/upload-artifact@v4
      with:
        name: macos-intel-gui
        path: dist/mac/CursorProGUI-MacOS-Intel.dmg

  build-linux-cli:
    runs-on: ubuntu-22.04
    
    steps:
    - uses: actions/checkout@v2
    
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller
        pip install -r requirements.txt
        
    - name: Build Linux executable
      run: |
        python build.py
        
    - name: Upload Linux artifact
      uses: actions/upload-artifact@v4
      with:
        name: linux-cli
        path: dist/linux/CursorPro-Linux

  # 新增 - Linux GUI版本
  build-linux-gui:
    runs-on: ubuntu-22.04
    
    steps:
    - uses: actions/checkout@v2
    
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller
        pip install -r requirements.txt
        sudo apt-get update
        sudo apt-get install -y libgl1-mesa-glx libxkbcommon-x11-0
        pip install PyQt6
        
    - name: Build Linux GUI executable
      run: |
        python build.py --gui
        
    - name: Upload Linux GUI artifact
      uses: actions/upload-artifact@v4
      with:
        name: linux-gui
        path: dist/linux/CursorProGUI-Linux

  create-release:
    needs: [
      # build-windows-cli, build-windows-gui,
      # build-macos-arm64-cli, build-macos-arm64-gui,
      # build-linux-cli, build-linux-gui,
      build-macos-intel-cli, build-macos-intel-gui
    ]
    runs-on: ubuntu-22.04
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
          
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            artifacts/windows-cli/CursorPro-Windows.exe
            artifacts/windows-gui/CursorProGUI-Windows.exe
            artifacts/macos-arm64-cli/CursorPro-MacOS-ARM64
            artifacts/macos-arm64-gui/CursorProGUI-MacOS-ARM64.dmg
            artifacts/macos-intel-cli/CursorPro-MacOS-Intel
            artifacts/macos-intel-gui/CursorProGUI-MacOS-Intel.dmg
            artifacts/linux-cli/CursorPro-Linux
            artifacts/linux-gui/CursorProGUI-Linux
          generate_release_notes: true

        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
